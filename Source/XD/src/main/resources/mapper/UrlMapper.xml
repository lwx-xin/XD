<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="priv.xin.xd.core.dao.UrlMapper">

  <resultMap id="BaseResultMap" type="priv.xin.xd.core.entity.Url">
    <id column="URL_ID" jdbcType="VARCHAR" property="urlId" />
    <result column="URL_PATH" jdbcType="VARCHAR" property="urlPath" />
    <result column="URL_TYPE" jdbcType="VARCHAR" property="urlType" />
    <result column="URL_PLATFORM" jdbcType="VARCHAR" property="urlPlatform" />
    <result column="URL_REMARKS" jdbcType="VARCHAR" property="urlRemarks" />
    <result column="URL_DEL_FLAG" jdbcType="VARCHAR" property="urlDelFlag" />
    <result column="URL_CREATE_TIME" jdbcType="TIMESTAMP" property="urlCreateTime" />
    <result column="URL_CREATE_USER" jdbcType="VARCHAR" property="urlCreateUser" />
    <result column="URL_MODIFY_TIME" jdbcType="TIMESTAMP" property="urlModifyTime" />
    <result column="URL_MODIFY_USER" jdbcType="VARCHAR" property="urlModifyUser" />
  </resultMap>

  <resultMap id="UrlExMap" type="priv.xin.xd.core.entity.ex.UrlEx" extends="BaseResultMap">
    <result property="urlTypeName" column="URL_TYPE_NAME" jdbcType="VARCHAR"/>
    <result property="urlPlatformName" column="URL_PLATFORM_NAME" jdbcType="VARCHAR"/>
    <result property="menuCount" column="MENU_COUNT" jdbcType="INTEGER"/>

    <collection property="authList" ofType="priv.xin.xd.core.entity.Auth">
      <id column="AUTH_ID" jdbcType="VARCHAR" property="authId" />
      <result column="AUTH_NAME" jdbcType="VARCHAR" property="authName" />
      <result column="AUTH_DEL_FLAG" jdbcType="VARCHAR" property="authDelFlag" />
      <result column="AUTH_CREATE_TIME" jdbcType="TIMESTAMP" property="authCreateTime" />
      <result column="AUTH_CREATE_USER" jdbcType="VARCHAR" property="authCreateUser" />
      <result column="AUTH_MODIFY_TIME" jdbcType="TIMESTAMP" property="authModifyTime" />
      <result column="AUTH_MODIFY_USER" jdbcType="VARCHAR" property="authModifyUser" />
    </collection>
    <collection property="urlParamList" ofType="priv.xin.xd.core.entity.UrlParam">
      <id column="URL_PARAM_ID" jdbcType="VARCHAR" property="urlParamId" />
      <result column="URL_PARAM_URL_ID" jdbcType="VARCHAR" property="urlId" />
      <result column="URL_PARAM_NAME" jdbcType="VARCHAR" property="urlParamName" />
      <result column="URL_PARAM_VALUE" jdbcType="VARCHAR" property="urlParamValue" />
      <result column="URL_PARAM_REQUIRED" jdbcType="VARCHAR" property="urlParamRequired" />
      <result column="URL_PARAM_REMARK" jdbcType="VARCHAR" property="urlParamRemark" />
      <result column="URL_PARAM_ERR_HINT" jdbcType="VARCHAR" property="urlParamErrHint" />
      <result column="URL_PARAM_DEL_FLAG" jdbcType="VARCHAR" property="urlParamDelFlag" />
      <result column="URL_PARAM_CREATE_TIME" jdbcType="TIMESTAMP" property="urlParamCreateTime" />
      <result column="URL_PARAM_CREATE_USER" jdbcType="VARCHAR" property="urlParamCreateUser" />
      <result column="URL_PARAM_MODIFY_TIME" jdbcType="TIMESTAMP" property="urlParamModifyTime" />
      <result column="URL_PARAM_MODIFY_USER" jdbcType="VARCHAR" property="urlParamModifyUser" />
    </collection>
  </resultMap>

  <sql id="Base_Column_List">
    URL_ID, URL_PATH, URL_TYPE, URL_PLATFORM, URL_REMARKS, URL_DEL_FLAG, URL_CREATE_TIME,
    URL_CREATE_USER, URL_MODIFY_TIME, URL_MODIFY_USER
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from s_url
    where URL_ID = #{urlId,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from s_url
    where URL_ID = #{urlId,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="priv.xin.xd.core.entity.Url">
    insert into s_url (URL_ID, URL_PATH, URL_TYPE, 
      URL_PLATFORM, URL_REMARKS, URL_DEL_FLAG,
      URL_CREATE_TIME, URL_CREATE_USER, URL_MODIFY_TIME, 
      URL_MODIFY_USER)
    values (#{urlId,jdbcType=VARCHAR}, #{urlPath,jdbcType=VARCHAR}, #{urlType,jdbcType=VARCHAR}, 
      #{urlPlatform,jdbcType=VARCHAR}, #{urlRemarks,jdbcType=VARCHAR}, #{urlDelFlag,jdbcType=VARCHAR},
            SYSDATE(), #{urlCreateUser,jdbcType=VARCHAR}, SYSDATE(),
      #{urlModifyUser,jdbcType=VARCHAR})
  </insert>

  <update id="updateByPrimaryKey" parameterType="priv.xin.xd.core.entity.Url">
    update s_url
    <set>
      <if test="urlPath != null">
        URL_PATH = #{urlPath,jdbcType=VARCHAR},
      </if>
      <if test="urlType != null">
        URL_TYPE = #{urlType,jdbcType=VARCHAR},
      </if>
      <if test="urlPlatform != null">
        URL_PLATFORM = #{urlPlatform,jdbcType=VARCHAR},
      </if>
      <if test="urlRemarks != null">
        URL_REMARKS = #{urlRemarks,jdbcType=VARCHAR},
      </if>
      <if test="urlDelFlag != null">
        URL_DEL_FLAG = #{urlDelFlag,jdbcType=VARCHAR},
      </if>
      URL_MODIFY_TIME = SYSDATE(),
      URL_MODIFY_USER = #{urlModifyUser,jdbcType=VARCHAR},
    </set>
    where URL_ID = #{urlId,jdbcType=VARCHAR}
  </update>

  <!--通过实体作为筛选条件查询-->
  <select id="queryAllRegexp" resultMap="BaseResultMap">
    select
    URL_ID, URL_PATH, URL_TYPE, URL_PLATFORM, URL_REMARKS, URL_DEL_FLAG, URL_CREATE_TIME, URL_CREATE_USER,
    URL_MODIFY_TIME, URL_MODIFY_USER
    from xd.s_url
    <where>
      <if test="urlId != null and urlId != ''">
        and URL_ID = #{urlId}
      </if>
      <if test="urlPath != null and urlPath != ''">
        and #{urlPath} REGEXP CONCAT('^',URL_PATH,'$')
      </if>
      <if test="urlType != null and urlType != ''">
        and URL_TYPE = #{urlType}
      </if>
      <if test="urlPlatform != null and urlPlatform != ''">
        and URL_PLATFORM = #{urlPlatform}
      </if>
      <if test="urlRemarks != null and urlRemarks != ''">
        and URL_REMARKS = #{urlRemarks}
      </if>
      <if test="urlDelFlag != null and urlDelFlag != ''">
        and URL_DEL_FLAG = #{urlDelFlag}
      </if>
      <if test="urlCreateTime != null">
        and URL_CREATE_TIME = #{urlCreateTime}
      </if>
      <if test="urlCreateUser != null and urlCreateUser != ''">
        and URL_CREATE_USER = #{urlCreateUser}
      </if>
      <if test="urlModifyTime != null">
        and URL_MODIFY_TIME = #{urlModifyTime}
      </if>
      <if test="urlModifyUser != null and urlModifyUser != ''">
        and URL_MODIFY_USER = #{urlModifyUser}
      </if>
    </where>
  </select>

  <!--通过实体作为筛选条件查询-->
  <select id="queryAll" resultMap="BaseResultMap">
    select
    URL_ID, URL_PATH, URL_TYPE, URL_PLATFORM, URL_REMARKS, URL_DEL_FLAG, URL_CREATE_TIME, URL_CREATE_USER,
    URL_MODIFY_TIME, URL_MODIFY_USER
    from xd.s_url
    <where>
      <if test="urlId != null and urlId != ''">
        and URL_ID = #{urlId}
      </if>
      <if test="urlPath != null and urlPath != ''">
        and URL_PATH = #{urlPath}
      </if>
      <if test="urlType != null and urlType != ''">
        and URL_TYPE = #{urlType}
      </if>
      <if test="urlPlatform != null and urlPlatform != ''">
        and URL_PLATFORM = #{urlPlatform}
      </if>
      <if test="urlRemarks != null and urlRemarks != ''">
        and URL_REMARKS = #{urlRemarks}
      </if>
      <if test="urlDelFlag != null and urlDelFlag != ''">
        and URL_DEL_FLAG = #{urlDelFlag}
      </if>
      <if test="urlCreateTime != null">
        and URL_CREATE_TIME = #{urlCreateTime}
      </if>
      <if test="urlCreateUser != null and urlCreateUser != ''">
        and URL_CREATE_USER = #{urlCreateUser}
      </if>
      <if test="urlModifyTime != null">
        and URL_MODIFY_TIME = #{urlModifyTime}
      </if>
      <if test="urlModifyUser != null and urlModifyUser != ''">
        and URL_MODIFY_USER = #{urlModifyUser}
      </if>
    </where>
  </select>

  <select id="queryListLimit" resultMap="UrlExMap">
    SELECT
      u.URL_ID,
      u.URL_PATH,
      u.URL_TYPE,
      u.URL_PLATFORM,
      u.URL_REMARKS,
      c1.CODE_NAME as URL_TYPE_NAME,
      c2.CODE_NAME as URL_PLATFORM_NAME
    FROM s_url u
    LEFT JOIN m_code c1 ON u.URL_TYPE = c1.CODE_VALUE AND c1.CODE_GROUP='request_method'
    LEFT JOIN m_code c2 ON u.URL_PLATFORM = c2.CODE_VALUE AND c2.CODE_GROUP='platform'
    <where>
      <if test="urlEx.urlId != null and urlEx.urlId != ''">
        and u.URL_ID = #{urlEx.urlId}
      </if>
      <if test="urlEx.urlPath != null and urlEx.urlPath != ''">
        and u.URL_PATH like #{urlEx.urlPath}
      </if>
      <if test="urlEx.urlType != null and urlEx.urlType != ''">
        and u.URL_TYPE = #{urlEx.urlType}
      </if>
      <if test="urlEx.urlPlatform != null and urlEx.urlPlatform != ''">
        and u.URL_PLATFORM = #{urlEx.urlPlatform}
      </if>
    </where>

    <if test="page.sortField == 'urlPath'">
      ORDER BY u.URL_PATH ${page.sortOrder}
    </if>
    <if test="page.sortField == 'urlType'">
      ORDER BY u.URL_TYPE ${page.sortOrder}
    </if>
    <if test="page.sortField == 'urlPlatform'">
      ORDER BY u.URL_PLATFORM ${page.sortOrder}
    </if>

    <if test="page.pageSize !=-1 and (urlEx.urlId == null or urlEx.urlId == '')">
      limit #{page.offSet}, #{page.pageSize}
    </if>
  </select>

  <select id="queryListLimitCount" resultType="java.lang.Integer">
    SELECT
    count(*)
    FROM s_url u
    <where>
      <if test="urlEx.urlId != null and urlEx.urlId != ''">
        and u.URL_ID = #{urlEx.urlId}
      </if>
      <if test="urlEx.urlPath != null and urlEx.urlPath != ''">
        and u.URL_PATH like #{urlEx.urlPath}
      </if>
      <if test="urlEx.urlType != null and urlEx.urlType != ''">
        and u.URL_TYPE = #{urlEx.urlType}
      </if>
      <if test="urlEx.urlPlatform != null and urlEx.urlPlatform != ''">
        and u.URL_PLATFORM = #{urlEx.urlPlatform}
      </if>
    </where>
  </select>

  <select id="queryDetail" resultMap="UrlExMap">
    SELECT
      u.URL_ID,
      u.URL_PATH,
      u.URL_PLATFORM,
      u.URL_TYPE,
      u.URL_REMARKS,
      u.URL_DEL_FLAG,
      u.URL_CREATE_TIME,
      u.URL_CREATE_USER,
      u.URL_MODIFY_TIME,
      u.URL_MODIFY_USER,

      a.AUTH_ID,
      a.AUTH_NAME,
      a.AUTH_DEL_FLAG,
      a.AUTH_CREATE_TIME,
      a.AUTH_CREATE_USER,
      a.AUTH_MODIFY_TIME,
      a.AUTH_MODIFY_USER,

      up.URL_PARAM_ID,
      up.URL_ID AS URL_PARAM_URL_ID,
      up.URL_PARAM_NAME,
      up.URL_PARAM_VALUE,
      up.URL_PARAM_REQUIRED,
      up.URL_PARAM_REMARK,
      up.URL_PARAM_ERR_HINT,
      up.URL_PARAM_DEL_FLAG,
      up.URL_PARAM_CREATE_TIME,
      up.URL_PARAM_CREATE_USER,
      up.URL_PARAM_MODIFY_TIME,
      up.URL_PARAM_MODIFY_USER
    FROM s_url u
    LEFT JOIN s_auth_url au ON au.URL_ID = u.URL_ID
    LEFT JOIN s_auth a ON a.AUTH_ID = au.AUTH_ID
    LEFT JOIN s_url_param up ON up.URL_ID = u.URL_ID
    WHERE u.URL_ID = #{urlId}
  </select>

  <select id="queryUrlUsedCount" resultMap="UrlExMap">
    SELECT
      IFNULL(m.MENU_COUNT,0) AS MENU_COUNT
    FROM s_url u
           LEFT JOIN (SELECT MENU_URL,COUNT(MENU_URL) AS MENU_COUNT FROM s_menu GROUP BY MENU_URL) m ON m.MENU_URL = u.URL_ID
    WHERE u.URL_ID = #{urlId}
  </select>
</mapper>